Challenges to overcome
* Move a specific amount (DONE)
* Turn a certain angle (DONE)
* Follow a line a certain distance
* Pick up block (DONE
* Hold arm in position (DONE)

NOTE to self:
MoveVelocity() is horrible for driving, use voltage instead



Library issues that need to be addressed:
* How to follow a line asynchronously such that it stops at a certain distance

* Address drive train slop
	* Add reverse motor functionality
* Add exceptions



Library Comments (since the commit after c3ae2a862709d610a57659b6e13b8ead1ca859d5):
[DONE]: The file is 100% complete; Nothing needed.
[DOC]: The file needs new or updated documentation.
[WIP]: The file is in WIP
[REVIEW]: The file should be reviewed in the future for possible bugs

include/inu
	ControllerCallback.h [REVIEW]
	ControllerStream.h [REVIEW]

	auto/
		ArmAssembly.h [WIP] // Need to implement button 
		ArmAssemblyBuilder.h [WIP] // Need to implement button
		XLineFollower.h [WIP] 
		XLineFollowerBuilder.h [WIP]

		chassis/ 
			AutoChassis.h [DOC]
			AutoChassisBuilder.h [DOC]
			AutoXChassis.h [DOC]
			AutoXChassisBuilder.h [DOC]

	motor/
		PID.h [DONE]
		PIDProfile.hpp [DONE]
		
		background/
			BackgroundMotor.h [DONE]
			BackgroundMotorSystem.h [DOC]
			PIDInertialMotor.h [DOC]
			PIDMotor.h [DOC]
			PIDVisionMotor [???????]
			SlewMotor.h [REVIEW]

	wrapper/
		ADIMotor.h [REVIEW]
		LineSensor.h [REVIEW]
		Motor.h [REVIEW]
		VisionSensor.h
			


















FOR later use
1. Implement functions in new class Chassis, that allows you to set the speed of all motors manually (Turn, forward)
2. Map controller joysticks to chassis
3. Define ChassisBuilder
	Option for Slew, other stuff

4. If you're bored use ChassisBuilder in AutoChassisBuilder
